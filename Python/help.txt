String and text
• Python uses type str to represent text as sequences of characters.
• Strings are created by placing pairs of single or double quotes around the
text. Multiline strings can be created using matching pairs of triple quotes.
• Special characters like newline and tab are represented using escape
sequences that begin with a backslash.
• Values can be printed using built-in function print, and input can be provided
by the user using built-in function input.

Condition statements:

• Python uses Boolean values, True and False, to represent what is true and
what isn’t. Programs can combine these values using three operators: not,
and, and or.
• Boolean operators can also be applied to numeric values. 0, 0.0, the empty
string, and None are treated as False; all other numeric values and strings
are treated as True. It is best to avoid applying Boolean operators to non-
Boolean values.
• Relational operators such as “equals” and “less than” compare values and
produce a Boolean result.
• When different operators are combined in an expression, the order of
precedence from highest to lowest is arithmetic, relational, and then
Boolean.
• if statements control the flow of execution. As with function definitions,
the bodies of if statements are indented, as are the bodies of elif and else
clauses.


In this chapter, you learned the following:
• Repeating a block is a fundamental way to control a program’s behavior. A
for loop can be used to iterate over the items of a list, over the characters of
a string, and over a sequence of integers generated by built-in function range.
• The most general kind of repetition is the while loop, which continues
executing as long as some specified Boolean condition is true. However,
the condition is tested only at the beginning of each iteration. If that
condition is never false, the loop will be executed forever.
• The break and continue statements can be used to change the way loops
execute.
• Control structures like loops and conditionals can be nested inside one
another to any desired depth.